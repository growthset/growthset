
type Local {
  email: String!
}

type User {
  "A User Object"
  local: Local!
  role: String!
}

type Guide {
  id: ID!
  name: String!
}

type Site {
  siteURL: String!
  id: ID!
}

type DeleteResponse {
  success: Boolean
  errorMessage: String
}

type ChangePasswordResponse {
  success: Boolean
  errorMessage: String
}

input GuideInput {
  id: ID
  name: String!
}

input SiteInput {
  siteURL: String!
  id: ID
}

input LocalInput {
  email: String!
  password: String!
}

input UserInput {
  local: LocalInput!
  role: String!
}

type Query {
  helloWorld: String!
  currentUser: String
  listUsers: [User]
  listGuides: [Guide]
  listSites: [Site]
}

type Mutation {
    createGuide(guide: GuideInput!): Guide
    updateGuide(guide: GuideInput!): Guide
    createSite(site: SiteInput!): Site
    createUser(user: UserInput!): User
    updateUser(user: UserInput!): User
    deleteUser(email: String!): DeleteResponse
    deleteSite(siteURL: String!): DeleteResponse
    deleteGuide(id: ID!): DeleteResponse
    changePassword(newPassword: String!, oldPassword: String!): ChangePasswordResponse
}